
'''
N√≠vel 1 ‚Äì B√°sico
Crie uma lista com 5 n√∫meros e:
Mostre o primeiro e o √∫ltimo elemento.
Inverta a lista.
Calcule a soma dos elementos.
Pe√ßa para o usu√°rio digitar 5 nomes e armazene em uma lista. Depois:
Exiba todos os nomes em ordem alfab√©tica.
Verifique se um nome espec√≠fico est√° na lista.
Dada a lista:
frutas = ["ma√ß√£", "banana", "uva", "laranja", "pera"]
Adicione "melancia".
Remova "uva".
Substitua "banana" por "morango".
'''
# lista: list = []

# while True:
#     try:
#         numero = int(input('Digite o range: '))
#         break
#     except:
#         print('Digita o numero inteiro, MULA!!')


# for n in range(numero):
#     lista.append(n)

# total = len(lista)-1

# print(f'O primeiro registro √©: {lista[0]} e o ultimo n√∫mero √© o: {lista[total]}')
# print(lista)
# lista.reverse()
# print(lista)

# soma_lista = sum(lista)
# print(soma_lista)

# quantos_nomes: int = 3
# contador = 0
# lista: list = []
# while contador <= quantos_nomes:
    
#     nomes = input(f'Digite o nome numero {contador}: ')
#     lista.append(nomes)
#     contador += 1
# lista.sort()
# print(lista)

# procura = input('Qual nome deseja procurar: ')


# if procura in lista:
#     print(f'Nome {procura}, encontrado')
# else:
#     print(f'Nome {procura}, n√£o encontrado')


'''
üîπ N√≠vel 2 ‚Äì Dicion√°rios
Crie um dicion√°rio com informa√ß√µes de uma pessoa:
pessoa = {
    "nome": "Maria",
    "idade": 25,
    "cidade": "S√£o Paulo"
}
Acesse e mostre apenas a idade.
Adicione uma chave "profiss√£o".
Atualize a cidade para "Rio de Janeiro".
Remova a chave "idade".
Fa√ßa um programa que pe√ßa 3 produtos e seus pre√ßos, armazenando em um dicion√°rio. Depois:
Mostre todos os produtos com seus pre√ßos.
Calcule a m√©dia dos pre√ßos.
'''
pessoa = {
    "nome": "Maria",
    "idade": 25,
    "cidade": "S√£o Paulo"
}


print(pessoa["idade"])
pessoa["profiss√£o"] =  'N/A'

pessoa["cidade"] = 'Rio de Janeiro'
del pessoa["idade"]
print(pessoa)


lista_produtos:dict = {}
quantidade_repeticao: int = 0

while quantidade_repeticao <= 3:
    try:
        produto: str = input('Digite o produto: ')
        preco_produto = float(input('Digite o valor: '))

        lista_produtos[produto] = preco_produto
        quantidade_repeticao += 1
    except:
        print('Voc√™ digitou o valor incorreto!!!')
print(lista_produtos)


media_produto: float = sum(lista_produtos.values()) / len(lista_produtos)
print(media_produto)



'''
üîπ N√≠vel 3 ‚Äì Listas + Dicion√°rios
Crie uma lista de dicion√°rios representando alunos:
alunos = [
    {"nome": "Ana", "nota": 8},
    {"nome": "Jo√£o", "nota": 5},
    {"nome": "Pedro", "nota": 9}
]
Mostre apenas os nomes dos alunos.
Exiba quem tirou nota maior ou igual a 7.
Calcule a m√©dia das notas.
Crie um dicion√°rio onde as chaves s√£o nomes de pa√≠ses e os valores s√£o listas de cidades. Exemplo:
{
    "Brasil": ["S√£o Paulo", "Rio de Janeiro"],
    "EUA": ["Nova York", "Los Angeles"]
}
Adicione um novo pa√≠s e suas cidades.
Acrescente mais uma cidade ao Brasil.
Mostre todas as cidades dos EUA.
'''

'''
üîπ Desafio (mais avan√ßado)
Crie uma lista de compras onde cada item √© um dicion√°rio com:
produto (str)
quantidade (int)
pre√ßo_unit√°rio (float)
Exemplo:
compras = [
    {"produto": "Arroz", "quantidade": 2, "pre√ßo_unit√°rio": 25.0},
    {"produto": "Feij√£o", "quantidade": 3, "pre√ßo_unit√°rio": 8.5}
]
Calcule o valor total da compra.
Mostre o produto mais caro (considerando quantidade * pre√ßo_unit√°rio).
Adicione uma nova compra digitada pelo usu√°rio.
'''